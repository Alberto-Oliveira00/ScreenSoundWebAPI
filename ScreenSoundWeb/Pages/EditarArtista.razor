@page "/EditarArtista/{NomeArtista}"
@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager
<h3>Cadastrar artista</h3>

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Edição de Artista</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                      Variant="Variant.Outlined"
                      @bind-Value="nome"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                      Variant="Variant.Outlined"
                      @bind-Value="biografia"
                      Lines="4"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <div class="d-flex justify-end gap-4 mt-8"> 
                <MudButton Variant="Variant.Filled"
                           Color="Color.Error" 
                           @onclick="Deletar">
                    Deletar
                </MudButton>
                <MudButton Variant="Variant.Filled"
                        Color="Color.Primary"
                        @onclick="Editar">
                     Salvar Alterações
                </MudButton>
                
            </div>

    </MudForm>
</MudPaper>
-

@code {
    private string? nome;
    private string? biografia;
    [Parameter]
    public string? NomeArtista { get; set; }
    public string? fotoPerfil;

    public ArtistaResponse? Artista { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Artista = await artistaAPI.GetArtistaPorNomeAsync(NomeArtista!);
        nome = Artista!.Nome;
        biografia = Artista!.Bio;
    }

    private async Task  Deletar()
    {
        await artistaAPI.DeleteArtistaAsync(Artista!.Id);
        navigationManager.NavigateTo("/Artistas");
    }

    private async Task Editar()
    {
        var artistaAtualizado = new ArtistaRequestEdit(Artista!.Id, nome!, biografia!, fotoPerfil);

        await artistaAPI.EditarArtistaAsync(artistaAtualizado);
        navigationManager.NavigateTo("/Artistas");
    }
}
