@inject ArtistaAPI artistaAPI

<MudCard>
    <MudCardMedia Image=@Imagem></MudCardMedia>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Musica!.Nome</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2">Artista/Banda:@Musica!.NomeArtista</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Color="Color.Warning"
                   Variant="Variant.Outlined"
                   Href=@($"/EditarMusica/{Musica!.Nome}")>Detalhes
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public MusicaResponse? Musica { get; set; }

    public ArtistaResponse? Artista { get; set; }

    public string Imagem { get; set; } = "images/cardArtista.jpg";

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(Musica?.NomeArtista))
        {
            var artistaEncontrado = await artistaAPI.GetArtistaPorNomeAsync(Musica.NomeArtista);
            
            if (artistaEncontrado != null && !string.IsNullOrWhiteSpace(artistaEncontrado.FotoPerfil))
            {
                Imagem = artistaEncontrado.FotoPerfil;
            }
        }
    }
}